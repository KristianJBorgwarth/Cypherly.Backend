name: Deploy to Development Environment

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the solution
      - name: Build
        run: dotnet build --no-restore

      # Run tests
      - name: Test
        run: dotnet test --no-build --verbosity normal

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image for MiniEmail.API
        run: |
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/dev-minimemail-api:latest \
            -f MiniEmail.API/Dockerfile . \
            --push

      - name: Build and Push Docker Image for Cypherly.Authentication.API
        run: |
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/dev-cypherly-authentication-api:latest \
            -f Cypherly.Authentication.API/Dockerfile . \
            --push

      - name: Build and Push Docker Image for Cypherly.UserManagement.API
        run: |
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/dev-cypherly-usermanagement-api:latest \
            -f Cypherly.UserManagement.API/Dockerfile . \
            --push

      - name: Build and Push Docker Image for Cypherly.SagaOrchestrator.Messaging
        run: |
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/dev-cypherly-sagaorchestrator-messaging:latest \
            -f Cypherly.SagaOrchestrator/Dockerfile . \
            --push

      - name: Build and Push Docker Image for Cypherly.Chatserver.API
        run: |
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/dev-cypherly-chatserver-api:latest \
            -f Cypherly.Chatserver.API/Dockerfile . \
            --push